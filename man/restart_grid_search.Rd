% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{restart_grid_search}
\alias{restart_grid_search}
\title{Grid search for the restart parameter in RWR}
\usage{
restart_grid_search(
  ig,
  n.adj.M,
  seeds,
  filtering_rate,
  heterogeneous = FALSE,
  node_type = NULL,
  net1.weight = 0.5,
  iteration = 1
)
}
\arguments{
\item{ig}{Input graph}

\item{n.adj.M}{Normalized adjacency matrix}

\item{seeds}{Vector of seed values}

\item{filtering_rate}{Quantile for shifting the raw RWR scores}

\item{heterogeneous}{Logical. If TRUE, network is considered heterogeneous (two distinct node types, e.g., proteins and metabolites). If TRUE, node_type must be included as an argument or graph vertex attribute}

\item{node_type}{Named vector of node types. Only considered if heterogeneous=TRUE. Can only accommodate two unique node types.}

\item{net1.weight}{Relative weight to give to nodes of network 1 (the first type to appear in node_type).}

\item{iteration}{Current iteraiton of the AMEND algorithm}
}
\value{
a list containing an igraph object, subnetwork score, and restart value
}
\description{
Grid search for the restart parameter in RWR. For use inside \code{run_AMEND()}
}
\details{
This is a simple grid search for the restart probability parameter in RWR.
}
\examples{
library(igraph)

# Creating an adjacency matrix and graph
adjm = matrix(c(0, 1, 0, 0, 0, 0, 0, 0,
               1, 0, 1, 1, 1, 0, 0, 0,
               0, 1, 0, 0, 1, 1, 0, 0,
               0, 1, 0, 0, 0, 0, 1, 0,
               0, 1, 1, 0, 0, 0, 1, 1,
               0, 0, 1, 0, 0, 0, 0, 0,
               0, 0, 0, 1, 1, 0, 0, 0,
               0, 0, 0, 0, 1, 0, 0, 0), nrow = 8, dimnames = list(1:8, 1:8))
g = graph_from_adjacency_matrix(adjm, mode = 'undirected')
V(g)$name = 1:8
plot(g)

# Normalizing the adjacency matrix
adj_norm = adjm \%*\% diag(1 / degree(g))

# Creating a named vector of seed values
seeds = runif(8)
names(seeds) = 1:8

search = AMEND:::restart_grid_search(ig = g, n.adj.M = adj_norm,
                                     seeds = seeds, filtering_rate = 0.3)
plot(search[[1]])

}
