% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{data_preprocessing}
\alias{data_preprocessing}
\title{Pre-processing of experimental data for input into AMEND and RWR}
\usage{
data_preprocessing(
  graph,
  data.type = c("ECI", "logFC", "p_val"),
  eci.direction = c("positive", "negative"),
  logFC.direction = c("positive", "negative", "both"),
  seed.weight = 0.5
)
}
\arguments{
\item{graph}{(igraph object): input graph}

\item{data.type}{(character): one of ECI, logFC, or p_val. If graph is specified, must have matching vertex attribute}

\item{eci.direction}{(character): direction of interest for ECI values. negative or positive}

\item{logFC.direction}{(character): direction of interest for log fold change values. negative, positive, or both. When "both" is specified, the absolute value of logFC is taken}

\item{seed.weight}{(numeric): Relative weight to give to nodes not in the direction of interest in random walk with restart, between 0 and 1}
}
\value{
igraph object with 'seeds' and 'Z' vertex attributes
}
\description{
Pre-processing of experimental data for input into AMEND and RWR. For use inside \code{amend()} and \code{run_AMEND()}.
}
\details{
Transforms experimental data for use with Random walk with restart (RWR), which requires non-negative seed values with at least one non-zero element. For subnetwork scoring, the experimental scores need to be standardized w.r.t. all nodes in the input network.
For data.type "ECI", the seeding scheme involves taking the absolute value of the ECIs then weighting those nodes NOT in the direction of interest by 'seed.weight'
For data.type "logFC", the log fold changes are multiplied by -1 if the direction of interest is negative, 1 if the direction of interest is positive, and the absolute value is taken if the direction of interest is both. Then the values are exponentiated
For data.type "p_val", the p-values are transformed by -log10(p-value)
}
\examples{
# Attach igraph package
library(igraph)

# Inspect the igraph object included in AMEND package
# One can see it has vertex attributes name, symbol, and ECI
glut4_graph
plot(density(V(glut4_graph)$ECI))

# Transform experimental values (ECI) for multiple values of 'seed.weight'
new_graph1 = AMEND:::data_preprocessing(graph = glut4_graph, data.type = "ECI",
                                        eci.direction = "negative", seed.weight = 0.5)
new_graph2 = AMEND:::data_preprocessing(graph = glut4_graph, data.type = "ECI",
                                        eci.direction = "negative", seed.weight = 0.2)

# Comparing
plot(density(V(new_graph1)$seeds))
plot(density(V(new_graph2)$seeds))

plot(V(new_graph1)$ECI, V(new_graph1)$Z, type = "b",
     xlim = c(-1, 1), xlab = "ECI", ylab = "Standardized ECI")

}
