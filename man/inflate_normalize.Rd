% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{inflate_normalize}
\alias{inflate_normalize}
\title{Inflation operator on rows then column normalization}
\usage{
inflate_normalize(nadjM)
}
\arguments{
\item{nadjM}{Normalized adjacency matrix}
}
\value{
left stochastic matrix
}
\description{
\code{inflate_normalize()} applies...
}
\examples{
# Calculate the entropy (information) of a vector
entropy = function(x){
  tmp = ifelse(round(x, 20) == 0, 0, -x * log(x))
  sum(tmp)
}
# Calculate the stationary distribution of the transition matrix of an irriducible markov chain
stationary.distr = function(x){
  e = Re(RSpectra::eigs(A = x, k = 1, which = "LM")$vectors[,1])
  e / sum(e)
}
d = igraph::degree(glut4_graph) # node degrees of the graph
# normalizing adjacency matrix to get transition matrix
adj_norm = AMEND:::transition_matrix(glut4_graph, glut4_adjM, norm = "degree")
p1 = stationary.distr(adj_norm)
e1 = entropy(p1)
# Perform inflation-normalization
# This maximize entropy of stationary distribution of transition matrix
adj_norm = AMEND:::inflate_normalize(nadjM = adj_norm)
p2 = stationary.distr(adj_norm)
e2 = entropy(p2)

# Compare before and after
e1 < e2
plot(d, p1, xlab = "Degree", ylab = "Stationary Distribution", main = "Before", ylim = c(0, 0.01))
abline(a = 0, b = 1 / sum(d), xpd = FALSE)
plot(d, p2, xlab = "Degree", ylab = "Stationary Distribution", main = "After", ylim = c(0, 0.01))
abline(a = 0, b = 1 / sum(d), xpd = FALSE)

}
