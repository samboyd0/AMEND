% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{amend}
\alias{amend}
\title{Identify active modules from an interaction network}
\usage{
amend(
  eta,
  graph,
  n = 25,
  data.type = c("ECI", "logFC", "p_val"),
  eci.direction = c("positive", "negative"),
  logFC.direction = c("positive", "negative", "both"),
  adj_matrix = NULL,
  node_scores = NULL,
  normalize = c("core", "degree"),
  eta.search = FALSE,
  seed.weight = 0.5,
  verbose = F
)
}
\arguments{
\item{eta}{(numeric): starting filtering rate}

\item{graph}{an igraph object with experimental data as vertex attribute. Either graph or adj_matrix and node_scores must be specified}

\item{n}{(integer): approximate size of the final module}

\item{data.type}{(character): one of ECI, logFC, or p_val. If graph is specified, must have matching vertex attribute}

\item{eci.direction}{(character): direction of interest for ECI values. negative or positive}

\item{logFC.direction}{(character): direction of interest for log fold change values. negative, positive, or both. When "both" is specified, the absolute value of logFC is taken}

\item{adj_matrix}{(matrix): adjacency matrix of network. Either graph or adj_matrix and node_scores must be specified}

\item{node_scores}{vector of node scores}

\item{normalize}{(character): normalization scheme of adjacency matrix for random walk with restart}

\item{eta.search}{(logical): Whether the starting filtering rate (eta) is being searched for}

\item{seed.weight}{(numeric): Relative weight to give to nodes not in the direction of interest in random walk with restart, between 0 and 1}

\item{verbose}{(logical): Whether to output current iteration number to show progress}
}
\value{
a named list with the following elements:
\itemize{
\item module: the final module (i.e., subnetwork)
\item score: final module score
\item subnetworks: a list of node names contained in intermediate subnetworks
\item stats: network statistics
\item time: run time
\item input_params: list of input parameters
}
}
\description{
Identifies an active module, i.e., subnetwork with large experimental values, by iteratively applying random walk with restart and a heurstic solution to the maximum-weight connected subgraph problem.
}
\details{
See \code{run_AMEND()} and \url{link/to/paper}.
}
\examples{
# Attach igraph library
library(igraph)

# Inspect the igraph object included in AMEND package.
# One can see it has vertex attributes name, symbol, and ECI
glut4_graph
head(V(glut4_graph)$ECI)

\dontrun{
# Use amend() with an igraph object with a vertex attribute matching data.type arg
subnet1 = amend(graph = glut4_graph, eta = 0.6, data.type = "ECI",
                eci.direction = "negative", verbose = TRUE)

# Use amend() with an adjacency matrix and a vector of node scores
subnet2 = amend(adj_matrix = glut4_adjM, node_scores = eci_scores, eta = 0.6,
                data.type = "ECI", eci.direction = "negative", verbose = TRUE)
}

}
